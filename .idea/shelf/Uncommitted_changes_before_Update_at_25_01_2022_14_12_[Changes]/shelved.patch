Index: src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto.Classi;\r\n\r\nimport javax.persistence.*;\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\n\r\n@Entity\r\npublic class Prodotto {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private long id;\r\n    private String oggetto;\r\n    private int quantita;\r\n    private double prezzo;\r\n    private Tipo tipo;\r\n\r\n    @OneToMany(mappedBy = \"prodotto\", cascade = CascadeType.ALL, fetch = FetchType.LAZY)\r\n    private Set<Richiesta> richieste = new HashSet<>();\r\n\r\n    public Prodotto() {\r\n    }\r\n\r\n    public Prodotto(String oggetto, double prezzo, int quantita, Tipo tipo) {\r\n        this.oggetto = oggetto;\r\n        this.quantita = quantita;\r\n        this.prezzo = prezzo;\r\n        this.tipo = tipo;\r\n    }\r\n\r\n    public long getId() {\r\n        return id;\r\n    }\r\n\r\n    public String getOggetto() {\r\n        return oggetto;\r\n    }\r\n\r\n    public void setOggetto(String oggetto) {\r\n        this.oggetto = oggetto;\r\n    }\r\n\r\n    public int getQuantita() {\r\n        return quantita;\r\n    }\r\n\r\n    public void setQuantita(int quantita) {\r\n        this.quantita = quantita;\r\n    }\r\n\r\n    public double getPrezzo() {\r\n        return prezzo;\r\n    }\r\n\r\n    public void setPrezzo(double prezzo) {\r\n        this.prezzo = prezzo;\r\n    }\r\n\r\n    public Tipo getTipo() {\r\n        return tipo;\r\n    }\r\n\r\n\r\n    @Override\r\n    public String toString() {\r\n\r\n        return \"\\nPRODOTTO\" +\r\n                \"\\n\\tDescrizione: \" + this.oggetto +\r\n                \"\\n\\tQuantità disponibile: \" + this.getQuantita() +\r\n                \"\\n\\tPrezzo unitario: € \" + this.getPrezzo() + \"\\n\";\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java b/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java	(date 1643115929767)
@@ -63,11 +63,8 @@
 
     @Override
     public String toString() {
-
-        return "\nPRODOTTO" +
-                "\n\tDescrizione: " + this.oggetto +
-                "\n\tQuantità disponibile: " + this.getQuantita() +
-                "\n\tPrezzo unitario: € " + this.getPrezzo() + "\n";
+        return "\nPRODOTTO[Descrizione: " + this.oggetto +" -- Quantità disponibile: " + this.getQuantita() +
+                " -- Prezzo unitario: " + this.getPrezzo() + " euro]";
     }
 
 }
Index: src/main/java/it/unicam/cs/ids/Casotto/Casotto.java
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Casotto.java b/src/main/java/it/unicam/cs/ids/Casotto/Casotto.java
deleted file mode 100644
--- a/src/main/java/it/unicam/cs/ids/Casotto/Casotto.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ /dev/null	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
@@ -1,63 +0,0 @@
-package it.unicam.cs.ids.Casotto;
-
-import it.unicam.cs.ids.Casotto.Classi.*;
-import it.unicam.cs.ids.Casotto.Interazione.Acquisizione;
-import it.unicam.cs.ids.Casotto.Interazione.InteractionManager;
-import it.unicam.cs.ids.Casotto.Interazione.Menu;
-import it.unicam.cs.ids.Casotto.Repository.*;
-import org.springframework.beans.factory.annotation.Autowired;
-import org.springframework.boot.CommandLineRunner;
-import org.springframework.boot.SpringApplication;
-import org.springframework.boot.autoconfigure.SpringBootApplication;
-import org.springframework.context.annotation.Bean;
-import org.springframework.stereotype.Controller;
-
-import java.util.*;
-
-@Controller
-@SpringBootApplication
-public class Casotto {
-
-	@Autowired
-	InteractionManager im;
-
-	@Autowired
-	OmbrelloneRepository or;
-
-	public static void main(String[] args)  {
-		SpringApplication.run(Casotto.class, args);
-	}
-
-	@Bean
-	public CommandLineRunner mappingDemo(AccountRepository ar, PrenotazioniRepository pr, UtenteRepository ur, OmbrelloneRepository or, PrezzoRepository prr) {
-
-		return args -> {
-			String scelta = "";
-			Scanner sc = new Scanner(System.in);
-			Map<String, Map<String, Runnable>> menu = cambiaMenu(this.im.getAccount()).getMenu(this.im);
-
-			while (true) {
-				System.out.println("\n\n\nMenu'\n");
-				for (Map.Entry<String, Map<String, Runnable>> e : menu.entrySet())
-					System.out.println(e.getKey() + ". " + Objects.requireNonNull(e.getValue().entrySet().stream().findFirst().orElse(null)).getKey());
-
-				do {
-					if (!scelta.isEmpty())
-						System.out.print("Scelta NON valida. Riprova: ");
-
-					System.out.print("\nInserisci un numero: ");
-					scelta = sc.next();
-				}
-				while (!menu.containsKey(scelta));
-
-				Objects.requireNonNull(menu.get(scelta).entrySet().stream().findFirst().orElse(null)).getValue().run();
-				menu = cambiaMenu(this.im.getAccount()).getMenu(this.im);
-				scelta = "";
-			}
-		};
-	}
-
-	private Menu cambiaMenu(Account account) {
-		return (account==null) ? Menu::menuInizio : (account.getLivello()==Livello.CLIENTE) ? Menu::menuCliente : Menu::menuGestore;
-	}
-}
\ No newline at end of file
Index: src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto.Classi;\r\n\r\nimport javax.persistence.*;\r\n\r\n@Entity\r\npublic class Richiesta {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private long id;\r\n\r\n    @ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n    @JoinColumn(name = \"ordinazione_id\", nullable = false)\r\n    private Ordinazione ordinazione;\r\n\r\n    @ManyToOne(fetch = FetchType.LAZY, optional = false)\r\n    @JoinColumn(name = \"prodotto_id\", nullable = false)\r\n    private Prodotto prodotto;\r\n\r\n    private int quantita;\r\n    private double prezzo;\r\n    private String modifiche;\r\n\r\n    public Richiesta() {\r\n    }\r\n\r\n    public Richiesta(Prodotto prodotto, int quantita){\r\n        this(prodotto, quantita, null);\r\n    }\r\n\r\n\r\n    public Richiesta(Prodotto prodotto, int quantita, String modifiche) {\r\n        this.prodotto = prodotto;\r\n        this.quantita = quantita;\r\n        this.modifiche = modifiche;\r\n    }\r\n\r\n    public long getId() {\r\n        return id;\r\n    }\r\n\r\n    public Ordinazione getOrdinazione() {\r\n        return ordinazione;\r\n    }\r\n\r\n    public Prodotto getProdotto() {\r\n        return prodotto;\r\n    }\r\n\r\n    public int getQuantita() {\r\n        return quantita;\r\n    }\r\n\r\n    public double getPrezzo() {\r\n        return prezzo;\r\n    }\r\n\r\n    public String getModifiche() {\r\n        return modifiche;\r\n    }\r\n\r\n    public void setQuantita(int quantita) {\r\n        this.quantita = quantita;\r\n    }\r\n\r\n    public void setOrdinazione(Ordinazione ordinazione) {\r\n        this.ordinazione = ordinazione;\r\n    }\r\n\r\n    public void setPrezzo(double prezzo) {\r\n        this.prezzo = prezzo;\r\n    }\r\n\r\n    public void setModifiche(String modifiche) {\r\n        this.modifiche = modifiche;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java b/src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java	(date 1643112021329)
@@ -74,4 +74,15 @@
     public void setModifiche(String modifiche) {
         this.modifiche = modifiche;
     }
+
+
+    @Override
+    public String toString() {
+
+        return "\nRICHIESTA" +
+                "\t\nId: " + this.getId() +
+                "\t\nProdotto: [ Descrizione: " + this.getProdotto().getOggetto() + ", Prezzo unitario: " + this.getProdotto().getPrezzo() + "]" +
+                "\t\nQuantita': " + this.getQuantita() +
+                "\t\nModifiche: " + ((this.getModifiche().isEmpty()) ? "nessuna" : this.getModifiche());
+    }
 }
Index: src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto.Interazione;\r\n\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\n@Service\r\n@FunctionalInterface\r\npublic interface Menu\r\n{\r\n\r\n    Map<String, Map<String, Runnable>> getMenu(InteractionManager im);\r\n\r\n    static Map<String, Map<String, Runnable>> menuInizio(InteractionManager im) {\r\n        Map<String, Map<String, Runnable>> menu = new HashMap<>();\r\n\r\n        menu.put(\"1\", new HashMap<>()); menu.get(\"1\").put(\"Registrazione\", im::registration);\r\n        menu.put(\"2\", new HashMap<>()); menu.get(\"2\").put(\"Login\", im::login);\r\n        menu.put(\"0\", new HashMap<>()); menu.get(\"0\").put(\"Esci\", () -> System.exit(0));\r\n\r\n        return menu;\r\n    }\r\n\r\n    static Map<String, Map<String, Runnable>> menuCliente(InteractionManager im) {\r\n        Map<String, Map<String, Runnable>> menu = new HashMap<>();\r\n\r\n        menu.put(\"1\", new HashMap<>()); menu.get(\"1\").put(\"Effettua una prenotazione\", im::prenotaSpiaggia);\r\n        menu.put(\"2\", new HashMap<>()); menu.get(\"2\").put(\"Cancella una prenotazione\", im::cancellaPrenotazione);\r\n        menu.put(\"3\", new HashMap<>()); menu.get(\"3\").put(\"Visualizza storico prenotazione\", im::visualizzaStoricoPrenotazioni);\r\n        menu.put(\"4\", new HashMap<>()); menu.get(\"4\").put(\"Visualizza prenotazioni attive\", im::visualizzaPrenotazioniCorrenti);\r\n        menu.put(\"5\", new HashMap<>()); menu.get(\"5\").put(\"Logout\", im::logout);\r\n        menu.put(\"0\", new HashMap<>()); menu.get(\"0\").put(\"Esci\", () -> System.exit(0));\r\n\r\n        return menu;\r\n    }\r\n\r\n    static Map<String, Map<String, Runnable>> menuGestore(InteractionManager im) {\r\n        Map<String, Map<String, Runnable>> menu = new HashMap<>();\r\n\r\n        menu.put(\"1\", new HashMap<>()); menu.get(\"1\").put(\"Inserisci un nuovo prezzo\", im::inserisciPrezzoPerOmbrellone);\r\n        menu.put(\"2\", new HashMap<>()); menu.get(\"2\").put(\"Logout\", im::logout);\r\n        menu.put(\"0\", new HashMap<>()); menu.get(\"0\").put(\"Esci\", () -> System.exit(0));\r\n\r\n        return menu;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java b/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java	(date 1643064030442)
@@ -39,7 +39,8 @@
         Map<String, Map<String, Runnable>> menu = new HashMap<>();
 
         menu.put("1", new HashMap<>()); menu.get("1").put("Inserisci un nuovo prezzo", im::inserisciPrezzoPerOmbrellone);
-        menu.put("2", new HashMap<>()); menu.get("2").put("Logout", im::logout);
+        menu.put("2", new HashMap<>()); menu.get("2").put("Imposta prezzo ombrellone", im::impostaPrezzoOmbrellone);
+        menu.put("3", new HashMap<>()); menu.get("3").put("Logout", im::logout);
         menu.put("0", new HashMap<>()); menu.get("0").put("Esci", () -> System.exit(0));
 
         return menu;
Index: src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto.Classi;\r\n\r\nimport it.unicam.cs.ids.Casotto.Repository.ProdottoRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class GestoreProdotti {\r\n\r\n    @Autowired\r\n    ProdottoRepository prodottoRepository;\r\n\r\n    public List<Prodotto> getProdottiOf(List<Richiesta> richieste){\r\n        List<Prodotto> prodotti = new ArrayList<>();\r\n        for(Richiesta richiesta: richieste){\r\n            prodotti.add(prodottoRepository.findByRichiesteId(richiesta.getId()));\r\n        }\r\n        return prodotti;\r\n    }\r\n\r\n    public Prodotto getProdottoOf(Richiesta richiesta){\r\n        return prodottoRepository.findByRichiesteId(richiesta.getId());\r\n    }\r\n\r\n    public void incrementoQuantitaProdotto(Prodotto prodotto, int quantita){\r\n        this.modificaQuantitaProdotto(prodotto, quantita);\r\n    }\r\n\r\n    public boolean decrementoQuantitaProdotto(Prodotto prodotto, int quantita){\r\n        return this.modificaQuantitaProdotto(prodotto, quantita * -1);\r\n    }\r\n\r\n    private boolean modificaQuantitaProdotto(Prodotto prodotto, int quantita){\r\n        this.checkIsNull(prodotto, quantita);\r\n        if(!prodottoRepository.existsById(prodotto.getId())){\r\n            throw new IllegalArgumentException(\"Il prodotto passato non esiste\");\r\n        }\r\n        if(!this.isPresent(prodotto, quantita)){\r\n            return false;\r\n        }\r\n        prodotto.setQuantita(prodotto.getQuantita()+quantita);\r\n        prodottoRepository.save(prodotto);\r\n        return true;\r\n    }\r\n\r\n    public boolean aggiuntaProdotto(String oggetto, long prezzo, int quantita, Tipo tipo){\r\n        this.checkIsNull(oggetto, prezzo, quantita);\r\n        if(prodottoRepository.existsByOggetto(oggetto)){\r\n            return false;\r\n        }\r\n        Prodotto prodotto = new Prodotto(oggetto, prezzo, quantita, tipo);\r\n        prodottoRepository.save(prodotto);\r\n        return true;\r\n    }\r\n\r\n    public boolean rimozioneProdotto(Prodotto prodotto){\r\n        this.checkIsNull(prodotto);\r\n        if(!prodottoRepository.existsById(prodotto.getId())){\r\n            return false;\r\n        }\r\n        prodottoRepository.deleteById(prodotto.getId());\r\n        return true;\r\n    }\r\n\r\n    public List<Prodotto> getBevande(){\r\n        return prodottoRepository.findByTipo(Tipo.BEVANDE);\r\n    }\r\n\r\n    public List<Prodotto> getCibo(){\r\n        return prodottoRepository.findByTipo(Tipo.CIBO);\r\n    }\r\n\r\n    public List<Prodotto> getAll(){\r\n        List<Prodotto> lista = this.getBevande();\r\n        lista.addAll(this.getCibo());\r\n        return lista;\r\n    }\r\n\r\n    public boolean isPresent(Prodotto prodotto, int quantita){\r\n        this.checkIsNull(prodotto, quantita);\r\n        if(!prodottoRepository.existsById(prodotto.getId()) || quantita < 0){\r\n            return false;\r\n        }\r\n        return prodottoRepository.findById(prodotto.getId()).getQuantita() >= quantita;\r\n    }\r\n\r\n    private void checkIsNull(Object ... objects){\r\n        for(Object obj: objects){\r\n            if(obj == null){\r\n                throw new NullPointerException(\"I paramentri passati sono nulli\");\r\n            }\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java b/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java	(date 1643103002145)
@@ -87,10 +87,10 @@
         return prodottoRepository.findById(prodotto.getId()).getQuantita() >= quantita;
     }
 
-    private void checkIsNull(Object ... objects){
+    private void checkIsNull(Object ... objects) {
         for(Object obj: objects){
             if(obj == null){
-                throw new NullPointerException("I paramentri passati sono nulli");
+                throw new NullPointerException("I parametri passati sono nulli");
             }
         }
     }
Index: src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto.Classi;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class GestoreAcquisto {\r\n\r\n    private final GestoreProdotti gestoreProdotti;\r\n    private final List<Richiesta> richieste;\r\n    private final GestoreOrdinazione gestoreOrdinazione;\r\n\r\n    public GestoreAcquisto() {\r\n        this.gestoreProdotti = new GestoreProdotti();\r\n        this.richieste = new ArrayList<>();\r\n        this.gestoreOrdinazione = new GestoreOrdinazione();\r\n    }\r\n\r\n    public boolean addRichiesta(Prodotto prodotto, int quantita, String modifiche){\r\n        if(!gestoreProdotti.decrementoQuantitaProdotto(prodotto, quantita)){\r\n            return false;\r\n        }\r\n        if(modifiche.isEmpty()) {\r\n            Richiesta richiesta = new Richiesta(prodotto, quantita);\r\n            richiesta.setPrezzo(prodotto.getPrezzo()*quantita);\r\n            richieste.add(richiesta);\r\n        }\r\n        richieste.add(new Richiesta(prodotto, quantita, modifiche));\r\n        return true;\r\n    }\r\n\r\n    public boolean decrementaProdotto(Richiesta richiesta, int quantita){\r\n        boolean remove = false;\r\n        for(Richiesta richiestaList: richieste){\r\n            if(richiestaList.equals(richiesta)){\r\n                if(richiestaList.getQuantita() == quantita){\r\n                    remove = true;\r\n                    break;\r\n                }\r\n                if(richiestaList.getQuantita() > quantita){\r\n                    richiestaList.setQuantita(richiestaList.getQuantita()-quantita);\r\n                    richiestaList.setPrezzo(this.ricalcoloPrezzoRichiesta(richiestaList));\r\n                }\r\n                this.gestoreProdotti.incrementoQuantitaProdotto(richiestaList.getProdotto(), quantita);\r\n                return true;\r\n            }\r\n            break;\r\n        }\r\n        if(remove) this.richieste.remove(richiesta);\r\n        return false;\r\n    }\r\n\r\n    public Ordinazione confirmOrdinazione(Ombrellone ombrellone){\r\n        return this.gestoreOrdinazione.creaOrdinazione(richieste, ombrellone);\r\n    }\r\n\r\n    private double ricalcoloPrezzoRichiesta(Richiesta richiesta){\r\n        return gestoreProdotti.getProdottoOf(richiesta).getPrezzo() * richiesta.getQuantita();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java b/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java	(date 1643110730238)
@@ -16,18 +16,25 @@
     }
 
     public boolean addRichiesta(Prodotto prodotto, int quantita, String modifiche){
-        if(!gestoreProdotti.decrementoQuantitaProdotto(prodotto, quantita)){
+        if(!gestoreProdotti.isPresent(prodotto, quantita)){
             return false;
         }
-        if(modifiche.isEmpty()) {
-            Richiesta richiesta = new Richiesta(prodotto, quantita);
-            richiesta.setPrezzo(prodotto.getPrezzo()*quantita);
-            richieste.add(richiesta);
-        }
-        richieste.add(new Richiesta(prodotto, quantita, modifiche));
+
+        Richiesta richiesta = new Richiesta(prodotto, quantita, modifiche);
+        richiesta.setPrezzo(prodotto.getPrezzo()*quantita);
+        richieste.add(richiesta);
         return true;
     }
 
+    public double getPrezzoTotale() {
+        double totale = 0.0;
+
+        for(Richiesta richiesta : this.richieste)
+            totale += richiesta.getPrezzo();
+
+        return totale;
+    }
+
     public boolean decrementaProdotto(Richiesta richiesta, int quantita){
         boolean remove = false;
         for(Richiesta richiestaList: richieste){
@@ -49,6 +56,9 @@
         return false;
     }
 
+
+
+
     public Ordinazione confirmOrdinazione(Ombrellone ombrellone){
         return this.gestoreOrdinazione.creaOrdinazione(richieste, ombrellone);
     }
@@ -58,4 +68,7 @@
     }
 
 
+    public List<Richiesta> getAllRichieste() {
+        return this.richieste;
+    }
 }
Index: src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto.Classi;\r\n\r\nimport java.util.Set;\r\nimport java.util.HashSet;\r\nimport javax.persistence.*;\r\nimport java.time.LocalDate;\r\n\r\n/**\r\n * Classe che rappresenta l'entit&agrave; 'Prezzo'\r\n *\r\n */\r\n@Entity\r\npublic class Prezzo {\r\n\r\n    @Id\r\n    @GeneratedValue\r\n    private long id;\r\n    private double prezzo;\r\n    private int meseInizio;\r\n    private int meseFine;\r\n    private LocalDate DataInizio;\r\n    private LocalDate DataFine;\r\n    private Durata durata;\r\n\r\n    @ManyToMany(fetch = FetchType.EAGER, mappedBy = \"prezzi\")\r\n    private Set<Ombrellone> ombrelloni = new HashSet<>();\r\n\r\n    /**\r\n     * Costruttore di default che inizializza un prezzo per la creazione della corrispondente tabella nel database\r\n     *\r\n     */\r\n    Prezzo() {\r\n    }\r\n\r\n    /**\r\n     * Costruttore che inizializza un prezzo con i parametri passati: questi NON possono essere nulli\r\n     *\r\n     * @param prezzo prezzo della prenotazione\r\n     * @param meseInizio mese d'inizio validit&agrave; del prezzo\r\n     * @param meseFine mese di fine validit&agrave; del prezzo\r\n     * @param dataInizio data d'inizio validit&agrave; del prezzo per periodi speciali\r\n     * @param dataFine data di fine validit&agrave; del prezzo per periodi speciali\r\n     * @param durata {@link Durata} temporale del prezzo\r\n     */\r\n    public Prezzo(double prezzo, int meseInizio, int meseFine, LocalDate dataInizio, LocalDate dataFine, Durata durata) {\r\n        this.prezzo = prezzo;\r\n        this.meseInizio = meseInizio;\r\n        this.meseFine = meseFine;\r\n        DataInizio = dataInizio;\r\n        DataFine = dataFine;\r\n        this.durata = durata;\r\n    }\r\n\r\n    /**\r\n     * Restituisce l'identificativo del prezzo\r\n     *\r\n     * @return l'identificativo del prezzo\r\n     */\r\n    public long getId() {\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Restituisce il prezzo\r\n     *\r\n     * @return il prezzo\r\n     */\r\n    public double getPrezzo() {\r\n        return prezzo;\r\n    }\r\n\r\n    /**\r\n     * Restituisce il mese d'inizio validit&agrave; del prezzo\r\n     *\r\n     * @return il mese d'inizio validit&agrave; del prezzo\r\n     */\r\n    public int getMeseInizio() {\r\n        return meseInizio;\r\n    }\r\n\r\n    /**\r\n     * Restituisce il mese di fine validit&agrave; del prezzo\r\n     *\r\n     * @return il mese di fine validit&agrave; del prezzo\r\n     */\r\n    public int getMeseFine() {\r\n        return meseFine;\r\n    }\r\n\r\n    /**\r\n     * Restituisce la data d'inizio validit&agrave; del prezzo per periodi speciali\r\n     *\r\n     * @return la data d'inizio validit&agrave; del prezzo per periodi speciali\r\n     */\r\n    public LocalDate getDataInizio() {\r\n        return DataInizio;\r\n    }\r\n\r\n    /**\r\n     * Restituisce la data di fine validit&agrave; del prezzo per periodi speciali\r\n     *\r\n     * @return la data di fine validit&agrave; del prezzo per periodi speciali\r\n     */\r\n    public LocalDate getDataFine() {\r\n        return DataFine;\r\n    }\r\n\r\n    /**\r\n     * Restituisce la {@link Durata} temporale associata al prezzo\r\n     *\r\n     * @return la {@link Durata} temporale associata al prezzo\r\n     */\r\n    public Durata getDurata() {\r\n        return durata;\r\n    }\r\n\r\n\r\n\r\n\r\n    public String toString() {\r\n        return \"PREZZO\\nId: \" + this.getId() + \"\\nData inizio: \" + this.getDataInizio() + \"\\nData fine: \" + this.getDataFine() +\r\n                \"\\nMese inizio: \" + this.getMeseInizio() + \"Mese fine: \" + this.getMeseFine() +\r\n                \"\\nDurata temporale: \" + this.getDurata() + \"\\nPrezzo: \" + this.getPrezzo() + \"\\n\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java b/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java	(date 1643115927719)
@@ -118,8 +118,10 @@
 
 
     public String toString() {
-        return "PREZZO\nId: " + this.getId() + "\nData inizio: " + this.getDataInizio() + "\nData fine: " + this.getDataFine() +
-                "\nMese inizio: " + this.getMeseInizio() + "Mese fine: " + this.getMeseFine() +
-                "\nDurata temporale: " + this.getDurata() + "\nPrezzo: " + this.getPrezzo() + "\n";
+        return "PREZZO" +
+                "\n\tId: " + this.getId() +
+                "\n\tData inizio: " + this.getDataInizio() + "\n\tData fine: " + this.getDataFine() +
+                "\n\tMese inizio: " + this.getMeseInizio() + "\n\tMese fine: " + this.getMeseFine() +
+                "\n\tDurata temporale: " + this.getDurata() + "\n\tPrezzo: " + this.getPrezzo();
     }
 }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e044db9b-05ef-4b90-a42d-06c9973a3058\" name=\"Changes\" comment=\"Eliminazione import inutilizzati\">\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/7.3.2/fileHashes/resourceHashesCache.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/7.3.2/fileHashes/resourceHashesCache.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Casotto.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Ombrellone.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Ombrellone.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prenotazione.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prenotazione.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"ExternalProjectsData\">\r\n    <projectState path=\"$PROJECT_DIR$\">\r\n      <ProjectState />\r\n    </projectState>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitSEFilterConfiguration\">\r\n    <file-type-list>\r\n      <filtered-out-file-type name=\"LOCAL_BRANCH\" />\r\n      <filtered-out-file-type name=\"REMOTE_BRANCH\" />\r\n      <filtered-out-file-type name=\"TAG\" />\r\n      <filtered-out-file-type name=\"COMMIT_BY_MESSAGE\" />\r\n    </file-type-list>\r\n  </component>\r\n  <component name=\"JpbToolWindowState\">\r\n    <option name=\"myId2FirstActivated\">\r\n      <map>\r\n        <entry key=\"com.haulmont.jpb.jpaInspector\" value=\"true\" />\r\n        <entry key=\"com.haulmont.jpb.jpaPalette\" value=\"true\" />\r\n        <entry key=\"com.haulmont.jpb.jpaStructure\" value=\"true\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"myId2Visible\">\r\n      <map>\r\n        <entry key=\"com.haulmont.jpb.jpaInspector\" value=\"false\" />\r\n        <entry key=\"com.haulmont.jpb.jpaPalette\" value=\"false\" />\r\n        <entry key=\"com.haulmont.jpb.jpaStructure\" value=\"false\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"22dx3ELdjfWQW1gByHTFPfGsk60\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"ASKED_SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n    <property name=\"SHARE_PROJECT_CONFIGURATION_FILES\" value=\"true\" />\r\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Repository\" />\r\n    <property name=\"settings.editor.selected.configurable\" value=\"preferences.keymap\" />\r\n  </component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\Leira\\Documents\\programmi\\java\\Casotto\\src\\main\\java\\it\\unicam\\cs\\ids\\Casotto\\Repository\" />\r\n      <recent name=\"C:\\Users\\Leira\\Documents\\programmi\\java\\Casotto\\src\\main\\java\\it\\unicam\\cs\\ids\\Casotto\\Classi\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"CasottoApplication\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"it.unicam.cs.ids.Casotto.CasottoApplication\" />\r\n      <module name=\"Casotto.main\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"it.unicam.cs.ids.Casotto.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.CasottoApplication\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e044db9b-05ef-4b90-a42d-06c9973a3058\" name=\"Changes\" comment=\"\" />\r\n      <created>1640181066337</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1640181066337</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Implementazione classi entità con le relative enum\">\r\n      <created>1640611963076</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640611963076</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Creazione interfaccia per i vari Menù e della classe Acquisizione per l'acquisizione dei vari dati da tastiera.\">\r\n      <created>1643061799757</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643061799757</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Aggiornata in Casotto la modalità di visualizzazione dei menù e selezione delle voci\">\r\n      <created>1643061958152</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643061958152</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Aggiornamento file application.properties per impedire la visualizzazione delle query sql effettuate da spring boot\">\r\n      <created>1643062017094</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643062017094</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Rimozione del filtro che, nel metodo Spiaggia.getOmbrelloniLiberi, rimuove gli ombrelloni con capienza uguale al numero dei partecipanti\">\r\n      <created>1643062305975</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643062305975</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Correzione dichiarazione packages e imports\">\r\n      <created>1643063014019</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643063014019</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Ricaricamento ContatoreOggettiRepository\">\r\n      <created>1643063138978</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643063138978</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Eliminazione import inutilizzati\">\r\n      <created>1643063309405</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1643063309405</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"9\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"First Commit\" />\r\n    <MESSAGE value=\"Implementazione classi entità con le relative enum\" />\r\n    <MESSAGE value=\"Creazione interfaccia per i vari Menù e della classe Acquisizione per l'acquisizione dei vari dati da tastiera.\" />\r\n    <MESSAGE value=\"Aggiornata in Casotto la modalità di visualizzazione dei menù e selezione delle voci\" />\r\n    <MESSAGE value=\"Aggiornamento file application.properties per impedire la visualizzazione delle query sql effettuate da spring boot\" />\r\n    <MESSAGE value=\"Rimozione del filtro che, nel metodo Spiaggia.getOmbrelloniLiberi, rimuove gli ombrelloni con capienza uguale al numero dei partecipanti\" />\r\n    <MESSAGE value=\"Correzione dichiarazione packages e imports\" />\r\n    <MESSAGE value=\"Ricaricamento ContatoreOggettiRepository\" />\r\n    <MESSAGE value=\"Eliminazione import inutilizzati\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Eliminazione import inutilizzati\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/.idea/workspace.xml	(date 1643115927781)
@@ -4,21 +4,15 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e044db9b-05ef-4b90-a42d-06c9973a3058" name="Changes" comment="Eliminazione import inutilizzati">
-      <change beforePath="$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.2/executionHistory/executionHistory.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.2/fileHashes/fileHashes.lock" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/7.3.2/fileHashes/resourceHashesCache.bin" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/7.3.2/fileHashes/resourceHashesCache.bin" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" beforeDir="false" afterPath="$PROJECT_DIR$/.gradle/buildOutputCleanup/buildOutputCleanup.lock" afterDir="false" />
+    <list default="true" id="e044db9b-05ef-4b90-a42d-06c9973a3058" name="Changes" comment="Sovrascrittura metodo toString">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" beforeDir="false" afterPath="$PROJECT_DIR$/build/tmp/compileJava/previous-compilation-data.bin" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Casotto.java" beforeDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Ombrellone.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Ombrellone.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prenotazione.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prenotazione.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreAcquisto.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/GestoreProdotti.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prezzo.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Prodotto.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Classi/Richiesta.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/it/unicam/cs/ids/Casotto/Interazione/Menu.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -162,7 +156,14 @@
       <option name="project" value="LOCAL" />
       <updated>1643063309405</updated>
     </task>
-    <option name="localTasksCounter" value="9" />
+    <task id="LOCAL-00009" summary="Sovrascrittura metodo toString">
+      <created>1643099175605</created>
+      <option name="number" value="00009" />
+      <option name="presentableId" value="LOCAL-00009" />
+      <option name="project" value="LOCAL" />
+      <updated>1643099175605</updated>
+    </task>
+    <option name="localTasksCounter" value="10" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -187,6 +188,7 @@
     <MESSAGE value="Correzione dichiarazione packages e imports" />
     <MESSAGE value="Ricaricamento ContatoreOggettiRepository" />
     <MESSAGE value="Eliminazione import inutilizzati" />
-    <option name="LAST_COMMIT_MESSAGE" value="Eliminazione import inutilizzati" />
+    <MESSAGE value="Sovrascrittura metodo toString" />
+    <option name="LAST_COMMIT_MESSAGE" value="Sovrascrittura metodo toString" />
   </component>
 </project>
\ No newline at end of file
Index: src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package it.unicam.cs.ids.Casotto;\r\n\r\nimport it.unicam.cs.ids.Casotto.Classi.*;\r\nimport it.unicam.cs.ids.Casotto.Repository.AccountRepository;\r\nimport it.unicam.cs.ids.Casotto.Repository.OmbrelloneRepository;\r\nimport it.unicam.cs.ids.Casotto.Repository.PrenotazioniRepository;\r\nimport it.unicam.cs.ids.Casotto.Repository.UtenteRepository;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.boot.CommandLineRunner;\r\nimport org.springframework.boot.SpringApplication;\r\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.stereotype.Controller;\r\n\r\nimport java.util.Scanner;\r\n\r\n@Controller\r\n@SpringBootApplication\r\npublic class CasottoApplication {\r\n\r\n\t@Autowired\r\n\tInteractionManager im;\r\n\r\n\tprivate static int menu() {\r\n\r\n\t\tint choice;\r\n\t\tScanner sc = new Scanner(System.in);\r\n\r\n\t\tSystem.out.println(\"\\nMenu'\\n\");\r\n\r\n\t\tSystem.out.println(\"1. Registrazione\");\r\n\t\tSystem.out.println(\"2. Login\");\r\n\t\tSystem.out.println(\"3. Logout\");\r\n\t\tSystem.out.println(\"4. Effettua una prenotazione\");\r\n\t\tSystem.out.println(\"5. Visualizza storico prenotazione\");\r\n\t\tSystem.out.println(\"6. Visualizza prenotazioni attive\");\r\n\t\tSystem.out.println(\"0. Esci\");\r\n\r\n\t\tSystem.out.print(\"\\nInsert a number: \");\r\n\t\tchoice = sc.nextInt();\r\n\t\treturn choice;\r\n\t}\r\n\r\n\r\n\tpublic static void main(String[] args)  {\r\n\t\tSpringApplication.run(CasottoApplication.class, args);\r\n\t}\r\n\r\n\t@Bean\r\n\tpublic CommandLineRunner mappingDemo(AccountRepository ar, PrenotazioniRepository pr, UtenteRepository ur, OmbrelloneRepository or) {\r\n\r\n\t\treturn args -> {\r\n\r\n\t\t\tint choice = menu();\r\n\r\n\t\t\twhile(true) {\r\n\t\t\t\tswitch (choice) {\r\n\t\t\t\t\tcase 1: im.registration();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 2: im.login();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 3: im.logout();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\tcase 5:\r\n\t\t\t\t\tcase 6:\r\n\t\t\t\t\tcase 0: System.exit(0);\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tSystem.err.println(\"Error: invalid choice!!!\");\r\n\t\t\t\t}\r\n\t\t\t\tchoice = menu();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java b/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java
--- a/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java	(revision 306e6a5321fe330693efa14c3cdf70b91f825ff8)
+++ b/src/main/java/it/unicam/cs/ids/Casotto/CasottoApplication.java	(date 1643099172633)
@@ -1,10 +1,9 @@
 package it.unicam.cs.ids.Casotto;
 
 import it.unicam.cs.ids.Casotto.Classi.*;
-import it.unicam.cs.ids.Casotto.Repository.AccountRepository;
-import it.unicam.cs.ids.Casotto.Repository.OmbrelloneRepository;
-import it.unicam.cs.ids.Casotto.Repository.PrenotazioniRepository;
-import it.unicam.cs.ids.Casotto.Repository.UtenteRepository;
+import it.unicam.cs.ids.Casotto.Interazione.InteractionManager;
+import it.unicam.cs.ids.Casotto.Interazione.Menu;
+import it.unicam.cs.ids.Casotto.Repository.*;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.boot.CommandLineRunner;
 import org.springframework.boot.SpringApplication;
@@ -12,7 +11,7 @@
 import org.springframework.context.annotation.Bean;
 import org.springframework.stereotype.Controller;
 
-import java.util.Scanner;
+import java.util.*;
 
 @Controller
 @SpringBootApplication
@@ -21,55 +20,47 @@
 	@Autowired
 	InteractionManager im;
 
-	private static int menu() {
-
-		int choice;
-		Scanner sc = new Scanner(System.in);
-
-		System.out.println("\nMenu'\n");
-
-		System.out.println("1. Registrazione");
-		System.out.println("2. Login");
-		System.out.println("3. Logout");
-		System.out.println("4. Effettua una prenotazione");
-		System.out.println("5. Visualizza storico prenotazione");
-		System.out.println("6. Visualizza prenotazioni attive");
-		System.out.println("0. Esci");
+	@Autowired
+	OmbrelloneRepository or;
 
-		System.out.print("\nInsert a number: ");
-		choice = sc.nextInt();
-		return choice;
-	}
-
+	@Autowired
+	GestoreProdotti gestoreProdotti;
 
 	public static void main(String[] args)  {
 		SpringApplication.run(CasottoApplication.class, args);
 	}
 
 	@Bean
-	public CommandLineRunner mappingDemo(AccountRepository ar, PrenotazioniRepository pr, UtenteRepository ur, OmbrelloneRepository or) {
+	public CommandLineRunner mappingDemo(AccountRepository ar, PrenotazioniRepository pr, UtenteRepository ur, OmbrelloneRepository or, PrezzoRepository prr) {
 
 		return args -> {
 
-			int choice = menu();
+			String scelta = "";
+			Scanner sc = new Scanner(System.in);
+			Map<String, Map<String, Runnable>> menu = cambiaMenu(this.im.getAccount()).getMenu(this.im);
 
-			while(true) {
-				switch (choice) {
-					case 1: im.registration();
-						break;
-					case 2: im.login();
-						break;
-					case 3: im.logout();
-						break;
-					case 4:
-					case 5:
-					case 6:
-					case 0: System.exit(0);
-					default:
-						System.err.println("Error: invalid choice!!!");
+			while (true) {
+				System.out.println("\n\n\nMenu'\n");
+				for (Map.Entry<String, Map<String, Runnable>> e : menu.entrySet())
+					System.out.println(e.getKey() + ". " + Objects.requireNonNull(e.getValue().entrySet().stream().findFirst().orElse(null)).getKey());
+
+				do {
+					if (!scelta.isEmpty())
+						System.out.print("Scelta NON valida. Riprova: ");
+
+					System.out.print("\nInserisci un numero: ");
+					scelta = sc.next();
 				}
-				choice = menu();
+				while (!menu.containsKey(scelta));
+
+				Objects.requireNonNull(menu.get(scelta).entrySet().stream().findFirst().orElse(null)).getValue().run();
+				menu = cambiaMenu(this.im.getAccount()).getMenu(this.im);
+				scelta = "";
 			}
 		};
 	}
+
+	private Menu cambiaMenu(Account account) {
+		return (account==null) ? Menu::menuInizio : (account.getLivello()==Livello.CLIENTE) ? Menu::menuCliente : Menu::menuGestore;
+	}
 }
\ No newline at end of file
